#name: DetaApp (TEST) â€” CI
name: PingBack - Test, Build, Deploy
on:
  pull_request:
    branches:
      - dev
      - main
    #paths:
    #  - "frontend/src**"
  push:
    branches:
      - dev
      - main
    #paths:
    #  - "frontend/src**"
jobs:
  Check-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"
      - name: Install dependencies
        working-directory: frontend
        run: npm i
      - name: Run check
        working-directory: frontend
        run: |
          npm run check
  Test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"
      - name: Install dependencies
        working-directory: frontend
        run: npm i
      - name: Run tests
        working-directory: frontend
        run: |
          npm run test
  Lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"
      - name: Install dependencies
        working-directory: frontend
        run: npm i
      - name: Run lint
        working-directory: frontend
        run: |
          npm run lint

  Build-frontend:
    runs-on: ubuntu-latest
    if: ${{ always() }} # TODO: test only
    needs: ["Check-frontend", "Test-frontend", "Lint-frontend"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"
      - name: Install dependencies
        working-directory: frontend
        run: npm i
      - name: Run build
        working-directory: frontend
        run: |
          npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@master
        with:
          name: frontend-build-bundle
          path: |
            frontend/package-lock.json
            frontend/package.json
            frontend/bundled
  Build-docs:
    runs-on: ubuntu-latest
    if: ${{ always() }} # TODO: test only
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "docs/package-lock.json"
      - name: Install dependencies
        working-directory: docs
        run: npm i
      - name: Run build
        working-directory: docs
        run: |
          npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@master
        with:
          name: docs-build-bundle
          path: |
            docs/package-lock.json
            docs/package.json
            docs/out

  Deploy:
    runs-on: ubuntu-latest
    needs: ["Build-frontend", "Build-docs"]
    environment: production
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies & authenticate Space CLI
        run: |
          curl -fsSL https://get.deta.dev/space-cli.sh | sh
          echo '/home/runner/.detaspace/bin' >> $GITHUB_PATH
          echo "SPACE_ACCESS_TOKEN=${{ secrets.SPACE_ACCESS_TOKEN }}" >> $GITHUB_ENV
      - name: Download docs build artifacts
        uses: actions/download-artifact@v3
        with:
          name: docs-build-bundle
          path: docs/
      - name: Download frontend build artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-build-bundle
          path: frontend/
      - name: Push changes to Deta Space
        run: |
          echo "pid ${{ vars.PROJECT_ID }}"
        #  space push --id "${{ vars.PROJECT_ID }}" # TODO:
      - name: foo
        run: |
          ls -al
          echo docs
          ls docs
          echo frontend
          ls frontend
          echo cli
          space -h

  # Setup-docs:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - name: Setup NodeJS
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: "npm"
  #         cache-dependency-path: "docs/package-lock.json"
  #     - name: Install other dependencies
  #       run: |
  #         curl -fsSL https://get.deta.dev/space-cli.sh | sh
  #     - uses: actions/upload-artifact@master
  #       with:
  #         name: docs-setup
  #         path: docs
  # Setup-frontend:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - name: Setup NodeJS
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: "npm"
  #         cache-dependency-path: "frontend/package-lock.json"
  #     - name: Install other dependencies
  #       run: |
  #         curl -fsSL https://get.deta.dev/space-cli.sh | sh
  #     - uses: actions/upload-artifact@master
  #       with:
  #         name: frontend-setup
  #         path: frontend
  # Test-frontend:
  #   runs-on: ubuntu-latest
  #   needs: Setup-frontend
  #   steps:
  #     - uses: actions/download-artifact@master
  #       with:
  #         name: frontend-setup
  #         path: frontend
  #     - name: foo
  #       run: |
  #         ls -al
  #         space -h
  # Lint-frontend:
  #   runs-on: ubuntu-latest
  #   needs: Test-frontend
  #   steps:
  #     - name: foo
  #       run: pwd
  # Build-docs:
  #   runs-on: ubuntu-latest
  #   needs: Setup-docs
  #   steps:
  #     - uses: actions/download-artifact@master
  #       with:
  #         name: docs-setup
  #         path: docs
  #     - name: Build docs
  #       run: |
  #         cd docs
  #         npm run build
  # Build-frontend:
  #   runs-on: ubuntu-latest
  #   needs: Lint-frontend
  #   steps:
  #     - name: Build docs
  #       run: |
  #         cd docs
  #         npm run build
  #     - name: Build frontend
  #       run: |
  #         cd frontend
  #         npm run build
  # Deploy:
  #   runs-on: ubuntu-latest
  #   needs: ["Build-docs", "Build-frontend"]
  #   steps:
  #     - name: Push code
  #       run: space push
  #     - name: Create release
  #       run: space release --id foobar --latest --version v0.0.2
  # Notify:
  #   runs-on: ubuntu-latest
  #   needs: Deploy
  #   steps:
  #     - name: foo
  #       run: "echo todo"